{"version":3,"file":"js/783-legacy.63028ecf.js","mappings":"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","sources":["webpack://guiness-front/./src/Views/PostView.vue?1619","webpack://guiness-front/./src/components/PostItem.vue?9d26","webpack://guiness-front/./src/api/comment.js","webpack://guiness-front/src/components/PostItem.vue","webpack://guiness-front/./src/components/PostItem.vue?41c1","webpack://guiness-front/./src/components/PostItem.vue","webpack://guiness-front/src/Views/PostView.vue","webpack://guiness-front/./src/Views/PostView.vue?99a7","webpack://guiness-front/./src/Views/PostView.vue","webpack://guiness-front/./src/api/posts.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"post-view\"},[_c('PostItem')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"post-card__wrapper\"},[_c('div',{staticClass:\"post-card\"},[_c('div',{staticClass:\"post-card__img\"},[_vm._v(\"이미지 자리\")]),_c('div',[_c('div',{staticClass:\"post-card__follow\"},[_c('div',[_c('span',[_vm._v(_vm._s(_vm.postData.writerID))]),_c('button',{staticClass:\"btn-like\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.followUser}},[_vm._v(\" 팔로우 \"),_c('i',{class:['fa-heart', _vm.follow ? 'fas' : 'far']})])]),(this.$store.state.token)?_c('div',{staticClass:\"post-card__btns\"},[_c('button',{staticClass:\"btn__edit\",on:{\"click\":_vm.editPost}},[_vm._v(\"수정\")]),_c('button',{staticClass:\"btn__delete\",on:{\"click\":_vm.deletePost}},[_vm._v(\"삭제\")])]):_vm._e()]),_c('div',{staticClass:\"post-card__contents\"},[_c('h3',{staticClass:\"text__title\"},[_vm._v(_vm._s(_vm.postData.postTitle))]),_c('div',{staticClass:\"text__contents\"},[_vm._v(_vm._s(_vm.postData.content))]),_vm._l((_vm.comments),function(data,index){return _c('div',{key:data.index,staticClass:\"text__comments\"},[_c('span',[_vm._v(\" \"+_vm._s(data.content))]),_c('span',[_vm._v(\" \"+_vm._s(data.userID))]),_c('button',{staticClass:\"btn_del-comment\",on:{\"click\":function($event){return _vm.deleteComment(index)}}},[_vm._v(\" 삭제 \")])])}),_c('button',{staticClass:\"btn-like\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.likePost}},[_vm._v(\" 좋아요 \"+_vm._s(_vm.postData.likeNum)+\" \"),_c('i',{class:['fa-heart', _vm.liked ? 'fas' : 'far']})])],2),_c('div',{staticClass:\"comment-form\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.comment),expression:\"comment\"}],domProps:{\"value\":(_vm.comment)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.comment=$event.target.value}}}),_c('button',{attrs:{\"disabled\":!this.comment},on:{\"click\":_vm.createComment}},[_vm._v(\" 작성 \")])])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { instance } from \"./index\";\n\n// 댓글 생성\nfunction createComment(postData) {\n  return instance.post(\"comm/comment\", postData);\n}\n\n// 댓글 조회\nfunction fetchComments(postNum) {\n  return instance.get(`comm/comments/${postNum}`);\n}\n\n// 댓글 개별 조회\nfunction fetchComment(postNum) {\n  return instance.get(`comm/comment/${postNum}`);\n}\n\n// 댓글 개별 삭제\nfunction deleteComment(commentNum) {\n  return instance.delete(`comm/comment/${commentNum}`);\n}\n\nexport { createComment, fetchComment, fetchComments, deleteComment };\n","<!-- 게시글 상세 -->\n<template>\n  <div>\n    <div class=\"post-card__wrapper\">\n      <div class=\"post-card\">\n        <div class=\"post-card__img\">이미지 자리</div>\n        <div>\n          <div class=\"post-card__follow\">\n            <div>\n              <span>{{ postData.writerID }}</span>\n              <button type=\"button\" class=\"btn-like\" @click=\"followUser\">\n                팔로우&nbsp;<i\n                  :class=\"['fa-heart', follow ? 'fas' : 'far']\"\n                ></i>\n              </button>\n            </div>\n            <!-- 게시글 작성자일 경우에만 보여줌 -->\n            <div v-if=\"this.$store.state.token\" class=\"post-card__btns\">\n              <button @click=\"editPost\" class=\"btn__edit\">수정</button>\n              <button @click=\"deletePost\" class=\"btn__delete\">삭제</button>\n            </div>\n          </div>\n\n          <div class=\"post-card__contents\">\n            <h3 class=\"text__title\">{{ postData.postTitle }}</h3>\n\n            <div class=\"text__contents\">{{ postData.content }}</div>\n            <!-- 댓글 -->\n            <div\n              v-for=\"(data, index) in comments\"\n              :key=\"data.index\"\n              class=\"text__comments\"\n            >\n              <span> {{ data.content }}</span>\n              <span> {{ data.userID }}</span>\n              <button @click=\"deleteComment(index)\" class=\"btn_del-comment\">\n                삭제\n              </button>\n            </div>\n            <button type=\"button\" class=\"btn-like\" @click=\"likePost\">\n              좋아요&nbsp;{{ postData.likeNum }}&nbsp;<i\n                :class=\"['fa-heart', liked ? 'fas' : 'far']\"\n              ></i>\n            </button>\n          </div>\n          <div class=\"comment-form\">\n            <input v-model=\"comment\" /><button\n              :disabled=\"!this.comment\"\n              @click=\"createComment\"\n            >\n              작성\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fetchPost, deletePost } from \"@/api/posts\";\nimport { createComment, fetchComments, deleteComment } from \"@/api/comment\";\n// import { createFollow } from \"@/api.follow\";\nexport default {\n  created() {\n    this.fetchPost();\n    this.fetchComments();\n  },\n  mounted() {\n    console.log(\"id:\", this.$route.params.id);\n  },\n  data() {\n    return {\n      title: \"제목\",\n      contents: \"내용\",\n      comments: [],\n      comment: \"\",\n      commentNum: \"\",\n      postData: [],\n      postId: this.$route.params.id,\n      liked: false,\n      follow: false,\n      username: \"닉네임\",\n    };\n  },\n  methods: {\n    // 게시글 상세 조회\n    async fetchPost() {\n      try {\n        const { data } = await fetchPost(this.postId);\n        console.log(data);\n        this.postData = data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // 게시글 좋아요\n    async likePost() {\n      console.log(\"좋아요\");\n      this.liked = !this.liked;\n      if (this.liked == false) {\n        this.postData.likeNum -= 1;\n        console.log(\"좋아요\");\n      } else {\n        this.postData.likeNum += 1;\n        console.log(\"좋아요 취소\");\n      }\n    },\n    // 팔로우\n    async followUser() {\n      console.log(\"팔로우\");\n      this.follow = !this.follow;\n    },\n    // 게시글 삭제\n    async deletePost() {\n      const result = confirm(\"정말 삭제하시겠습니까?\");\n      if (result == true) {\n        try {\n          const { data } = await deletePost(this.postId);\n          console.log(data);\n        } catch (error) {\n          console.log(error);\n        }\n        this.$router.push(\"/category\");\n      } else {\n        console.log(\"삭제 취소\");\n      }\n    },\n    // 게시글 수정 페이지로\n    async editPost() {\n      const id = this.postId;\n      this.$router.push({ path: `/postview/edit/${id}`, replace: true });\n    },\n    // 댓글 작성\n    async createComment() {\n      try {\n        const { data } = await createComment({\n          content: this.comment,\n          userID: this.$store.state.userID,\n          postNum: this.postId,\n        });\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        this.initForm();\n        this.fetchComments();\n      }\n    },\n    // 댓글 조회\n    async fetchComments() {\n      const { data } = await fetchComments(this.postId);\n      this.comments = data;\n      console.log(data);\n      console.log(\"댓글\", this.comments);\n    },\n    initForm() {\n      this.comment = \"\";\n    },\n    async deleteComment(index) {\n      const result = confirm(\"정말 삭제하시겠습니까?\");\n      if (result == true) {\n        try {\n          const { data } = await deleteComment(this.comments[index].commentNum);\n          console.log(data);\n          this.fetchComments();\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        console.log(\"삭제 취소\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.post-card__wrapper {\n  width: 100%;\n}\n\n.post-card {\n  width: 100%;\n  display: flex;\n  gap: 30px;\n}\n\n.post-card__img {\n  width: 500px;\n  height: 500px;\n  background-color: #f9f9f9;\n  border: 1px solid rgb(226, 225, 225);\n  border-radius: 5px;\n  margin-top: 50px;\n}\n\n.post-card__contents {\n  width: 500px;\n  height: auto;\n  border: 1px solid rgb(226, 225, 225);\n  border-radius: 5px;\n  box-sizing: 10px;\n  padding: 20px;\n  margin-bottom: 10px;\n}\n\nh3 {\n  line-height: 50px;\n  border-bottom: 1px solid rgb(226, 225, 225);\n  width: 100%;\n}\n\n.text__contents {\n  /* border-bottom: 1px solid rgb(226, 225, 225); */\n  height: auto;\n  padding: 10px 0 100px 0;\n  font-size: 22px;\n}\n\n.text__comments {\n  border-top: 1px solid rgb(226, 225, 225);\n  height: auto;\n  padding: 5px 0;\n  font-size: 16px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.comment-form {\n  width: 500px;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n}\n.comment-form > input {\n  width: 400px;\n  border: 1px solid rgb(226, 225, 225);\n  border-radius: 5px;\n  text-indent: 10px;\n}\n\n.comment-form > button {\n  width: 90px;\n  border-style: none;\n  border-radius: 5px;\n  background-color: rgb(255, 210, 98);\n}\n\n.btn-like {\n  border-style: none;\n  border-radius: 5px;\n  border: 1px solid rgb(180, 179, 179);\n  background-color: transparent;\n  margin: 10px 0;\n  padding: 3px 10px;\n}\n\n.btn_del-comment {\n  border-style: none;\n  border-radius: 5px;\n  border: 1px solid rgb(180, 179, 179);\n  background-color: transparent;\n  margin: 0;\n  padding: 3px 3px;\n}\n\n.post-card__follow {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.post-card__follow > div > button {\n  margin-left: 10px;\n}\n\n.post-card__btns > .btn__edit {\n  width: 90px;\n  border-style: none;\n  border-radius: 5px;\n  background-color: rgb(255, 210, 98);\n  padding: 5px 0;\n}\n\n.post-card__btns > .btn__delete {\n  width: 90px;\n  border-style: none;\n  border-radius: 5px;\n  background-color: rgb(190, 190, 190);\n  color: rgb(16, 16, 16);\n  padding: 5px 0;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PostItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PostItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PostItem.vue?vue&type=template&id=55d0b984&scoped=true&\"\nimport script from \"./PostItem.vue?vue&type=script&lang=js&\"\nexport * from \"./PostItem.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PostItem.vue?vue&type=style&index=0&id=55d0b984&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"55d0b984\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"post-view\">\n    <PostItem></PostItem>\n  </div>\n</template>\n\n<script>\nimport PostItem from \"@/components/PostItem.vue\";\n\nexport default {\n  components: { PostItem },\n};\n</script>\n\n<style>\n.post-view {\n  width: 100%;\n  box-sizing: border-box;\n  padding: 210px 10%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 100px;\n  z-index: 1;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PostView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PostView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PostView.vue?vue&type=template&id=1e966ce8&\"\nimport script from \"./PostView.vue?vue&type=script&lang=js&\"\nexport * from \"./PostView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PostView.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// 학습 노트 조작과 관련된 CRUD API 함수 파일\nimport { instance } from \"./index\";\n\n// 게시글 목록 조회\nfunction fetchPosts() {\n  return instance.get(\"post/posts\");\n}\n\n// 특정 게시글을 조회하는 API\nfunction fetchPost(postData) {\n  return instance.get(`post/posts/${postData}`);\n}\n\n// 게시글 생성\nfunction createPost(postData) {\n  return instance.post(\"post/posts\", postData);\n}\n\n// 게시글 삭제\nfunction deletePost(postNum) {\n  return instance.delete(`post/posts/${postNum}`);\n}\n\n// 게시글 수정\nfunction editPost(postNum, postData) {\n  return instance.put(`post/posts/${postNum}`, postData);\n}\n\n// 사진 첨부\nfunction uploadImg() {\n  return instance.post(\"/post/uploadphoto\");\n}\n\nexport { fetchPosts, createPost, deletePost, fetchPost, editPost, uploadImg };\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticRenderFns","_v","_s","postData","writerID","attrs","on","followUser","class","follow","$store","state","editPost","deletePost","_e","postTitle","content","_l","data","index","key","userID","$event","deleteComment","likePost","likeNum","liked","directives","name","rawName","value","expression","domProps","target","composing","comment","createComment","instance","fetchComments","postNum","commentNum","created","mounted","console","title","contents","comments","postId","username","methods","fetchPost","result","confirm","id","path","replace","initForm","component","components","PostItem","createPost"],"sourceRoot":""}